char* addBinary(char* a, char* b) {
    int lenA = strlen(a); // 2
    int lenB = strlen(b); // 1
    int maxLen = (lenA > lenB ? lenA : lenB ) + 1; // for potential carry //4

    char *res = malloc(sizeof(char) * (maxLen + 1));
    res[maxLen] = '\0'; 
int carry = 0;
    int i = lenA-1, j = lenB-1, k = maxLen-1;

    while (i >= 0 || j >= 0 || k >= 0) {
        int sum = carry;

        if (i >= 0) {
            sum += a[i--] - '0'; 
        }

        if (j >= 0) {
            sum += b[j--] - '0';
        }

        carry = sum/2;
        res[k--] = (sum%2) + '0'; 
    }

    if (res[0] == '0') {
        memmove(res, res + 1, maxLen); 
    }

    return res;
}
